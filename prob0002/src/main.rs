// vim: expandtab shiftwidth=4 tabstop=4:

/*
 * Problem 0002: Even Fibonacci numbers
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

fn main() {
    let mut fib: Vec<i32> = Vec::new();

    fib.push(1);
    fib.push(1);

    let mut sum = 0;
    loop {
        // I'm sure I'll be ashamed of this later.
        let f_minus_1 = fib.pop().expect("Empty Stack!");
        let f_minus_2 = fib.pop().expect("Empty Stack!");

        let new_fibonacci = f_minus_1 + f_minus_2;
        fib.push(f_minus_1);
        fib.push(new_fibonacci);
        if new_fibonacci > 4000000 {
            break
        }
        if new_fibonacci % 2 == 0 {
            sum += new_fibonacci;
        }
    }
    println!("{sum}")
}
